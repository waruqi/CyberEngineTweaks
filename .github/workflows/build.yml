name: Build

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]
        mode: [release]

    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'ci skip')"

    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow --tags

    - name: Checkout submodules
      run: |
        git submodule sync --recursive
        git submodule update --init --force --recursive --depth=1

    # Install xmake
    - name: Setup xmake
      uses: xmake-io/github-action-setup-xmake@v1

    # Update xmake repository (in order to have the file that will be cached)
    - name: Update xmake repository
      run: xmake.exe repo --update

    # Fetch xmake dephash
    - name: Retrieve dependencies hash
      id: dep_hash
      run: echo "::set-output name=hash::$(xmake.exe dephash)"

    # Cache xmake dependencies
    - name: Retrieve cached xmake dependencies
      uses: actions/cache@v2
      with:
        path: ${{env.APPDATALOCAL}}\.xmake\packages
        key: ${{ runner.os }}-${{ matrix.arch }}-${{ matrix.mode }}-${{ steps.dep_hash.outputs.hash }}

    # Setup compilation mode and install project dependencies
    - name: Configure xmake and install dependencies
      run: xmake.exe config --arch=${{ matrix.arch }} --mode=${{ matrix.mode }} --yes -vD

    # Build the game
    - name: Build
      run: xmake.exe

    # Install the result files
    - name: Create package
      run: xmake.exe package

    # Upload artifacts
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}-${{ matrix.arch }}-${{ matrix.mode }}
        path: package/**
